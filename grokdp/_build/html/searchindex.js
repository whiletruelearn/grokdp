Search.setIndex({"alltitles": {"1. Fibonacci Sequence": [[0, "fibonacci-sequence"], [7, "fibonacci-sequence"]], "1. Knapsack Problem": [[10, "knapsack-problem"]], "1. Linear Sequence DP": [[4, "linear-sequence-dp"]], "1. Overlapping Subproblems": [[1, "overlapping-subproblems"]], "1. Use functools.lru_cache for Memoization": [[0, "use-functools-lru-cache-for-memoization"]], "10.1 Space Optimization": [[2, "space-optimization"]], "10.2 Using Less State": [[2, "using-less-state"]], "10.3 Combining Top-down and Bottom-up Approaches": [[2, "combining-top-down-and-bottom-up-approaches"]], "11.1 Bioinformatics: Sequence Alignment": [[3, "bioinformatics-sequence-alignment"]], "11.2 Finance: Option Pricing": [[3, "finance-option-pricing"]], "11.3 Natural Language Processing: Speech Recognition": [[3, "natural-language-processing-speech-recognition"]], "11.4 Robotics: Path Planning": [[3, "robotics-path-planning"]], "12.1 Identifying DP Problems": [[4, "identifying-dp-problems"]], "12.2 Common DP Patterns": [[4, "common-dp-patterns"]], "12.3 Steps to Approach and Solve DP Problems": [[4, "steps-to-approach-and-solve-dp-problems"]], "12.4 Tips for Coding Interviews": [[4, "tips-for-coding-interviews"]], "1D DP Problems": [[8, "d-dp-problems"]], "1D DP Solution:": [[2, "d-dp-solution"]], "2. Climbing Stairs": [[0, "climbing-stairs"], [7, "climbing-stairs"]], "2. Edit Distance": [[10, "edit-distance"]], "2. Optimal Substructure": [[1, "optimal-substructure"]], "2. Two-Dimensional DP": [[4, "two-dimensional-dp"]], "2. Use Default Dictionaries for Dynamic Programming Tables": [[0, "use-default-dictionaries-for-dynamic-programming-tables"]], "2D DP Problems": [[8, "id4"]], "3. Coin Change Problem": [[0, "coin-change-problem"], [7, "coin-change-problem"]], "3. Finding an Optimum Value": [[1, "finding-an-optimum-value"]], "3. Inline Conditionals and List Comprehensions": [[0, "inline-conditionals-and-list-comprehensions"]], "3. Interval DP": [[4, "interval-dp"]], "3. Palindrome Partitioning": [[10, "palindrome-partitioning"]], "4. Longest Increasing Subsequence": [[0, "longest-increasing-subsequence"]], "4. Subset DP": [[4, "subset-dp"]], "4. Use Tuple Keys for Multi-Dimensional Problems": [[0, "use-tuple-keys-for-multi-dimensional-problems"]], "5. Longest Common Subsequence": [[0, "longest-common-subsequence"]], "5. String DP": [[4, "string-dp"]], "7.1 Longest Palindromic Subsequence": [[11, "longest-palindromic-subsequence"]], "7.2 Regular Expression Matching": [[11, "regular-expression-matching"]], "8.1 Matrix Chain Multiplication": [[12, "matrix-chain-multiplication"]], "8.2 Maximal Square": [[12, "maximal-square"]], "9.1 All-Pairs Shortest Path (Floyd-Warshall Algorithm)": [[13, "all-pairs-shortest-path-floyd-warshall-algorithm"]], "9.2 Traveling Salesman Problem": [[13, "traveling-salesman-problem"]], "Advanced Dynamic Programming Techniques": [[9, "advanced-dynamic-programming-techniques"]], "Appendix": [[0, "appendix"]], "Appendix A. Python Tips and Tricks for DP": [[0, "appendix-a-python-tips-and-tricks-for-dp"]], "Appendix B. Common DP Patterns Cheat Sheet": [[0, "appendix-b-common-dp-patterns-cheat-sheet"]], "Approach": [[5, "approach"], [5, "id2"], [5, "id6"], [11, "approach"], [11, "id2"], [12, "approach"], [12, "id2"], [13, "approach"], [13, "id2"]], "Basic Dynamic Programming Problems": [[7, "basic-dynamic-programming-problems"]], "Bitmasking in DP": [[9, "bitmasking-in-dp"]], "Chapter 10: Optimization Techniques in Dynamic Programming": [[2, "chapter-10-optimization-techniques-in-dynamic-programming"]], "Chapter 11: Real-world Applications of Dynamic Programming": [[3, "chapter-11-real-world-applications-of-dynamic-programming"]], "Chapter 12: Common Patterns and Problem-Solving Strategies": [[4, "chapter-12-common-patterns-and-problem-solving-strategies"]], "Chapter 13: Practice Problems and Solutions": [[5, "chapter-13-practice-problems-and-solutions"]], "Chapter 8: Dynamic Programming in Arrays and Matrices": [[12, "chapter-8-dynamic-programming-in-arrays-and-matrices"]], "Chapter 9: Dynamic Programming with Graphs": [[13, "chapter-9-dynamic-programming-with-graphs"]], "Classic Dynamic Programming Problems": [[10, "classic-dynamic-programming-problems"]], "Complexity Analysis": [[11, "complexity-analysis"], [11, "id4"], [12, "complexity-analysis"], [12, "id4"], [13, "complexity-analysis"], [13, "id4"]], "Conclusion": [[2, "conclusion"], [3, "conclusion"], [4, "conclusion"], [11, "conclusion"], [12, "conclusion"], [13, "conclusion"]], "DP on Trees": [[9, "dp-on-trees"]], "Dynamic Programming for Coding Interviews.": [[15, "dynamic-programming-for-coding-interviews"]], "Dynamic Programming for Coding interviews": [[14, "dynamic-programming-for-coding-interviews"]], "Dynamic Programming in Strings": [[11, "dynamic-programming-in-strings"]], "Example: Fibonacci Sequence": [[2, "example-fibonacci-sequence"]], "Example: Knapsack Problem": [[2, "example-knapsack-problem"]], "Example: Matrix Chain Multiplication": [[2, "example-matrix-chain-multiplication"]], "Explanation": [[5, "explanation"], [5, "id4"], [5, "id8"], [5, "id10"], [5, "id13"], [5, "id16"], [5, "id19"], [5, "id22"], [5, "id25"], [5, "id28"], [5, "id31"], [5, "id34"], [5, "id37"], [5, "id40"], [5, "id43"], [5, "id46"], [5, "id49"], [5, "id52"], [5, "id55"], [5, "id58"]], "Explanation:": [[7, "explanation"], [7, "id5"], [8, "explanation"], [8, "id3"], [8, "id7"], [8, "id10"], [9, "explanation"], [9, "id2"], [9, "id4"], [10, "explanation"], [10, "id3"], [10, "id6"]], "Fundamentals of Dynamic Programming": [[6, "fundamentals-of-dynamic-programming"]], "Grid Traveler Problem": [[8, "grid-traveler-problem"]], "Implementation": [[5, "implementation"], [5, "id3"], [5, "id7"], [11, "implementation"], [11, "id3"], [12, "implementation"], [12, "id3"], [13, "implementation"], [13, "id3"]], "Intermediate Dynamic Programming Concepts": [[8, "intermediate-dynamic-programming-concepts"]], "Introduction to Dynamic Programming": [[1, "introduction-to-dynamic-programming"]], "Key Concepts: Overlapping Subproblems and Optimal Substructure": [[1, "key-concepts-overlapping-subproblems-and-optimal-substructure"]], "Longest Common Subsequence": [[8, "longest-common-subsequence"]], "Longest Increasing Subsequence": [[8, "longest-increasing-subsequence"]], "Maximum Subarray Sum (Kadane\u2019s Algorithm)": [[8, "maximum-subarray-sum-kadane-s-algorithm"]], "Memoization (Top-down approach)": [[6, "memoization-top-down-approach"]], "Naive DP Solution:": [[2, "naive-dp-solution"]], "Optimal Substructure": [[1, "id2"]], "Overlapping Subproblems": [[1, "id1"]], "Problem 10: Interleaving String": [[5, "problem-10-interleaving-string"]], "Problem 11: Longest Palindromic Substring": [[5, "problem-11-longest-palindromic-substring"]], "Problem 12: Minimum Path Sum": [[5, "problem-12-minimum-path-sum"]], "Problem 13: Unique Binary Search Trees": [[5, "problem-13-unique-binary-search-trees"]], "Problem 14: Best Time to Buy and Sell Stock with Cooldown": [[5, "problem-14-best-time-to-buy-and-sell-stock-with-cooldown"]], "Problem 15: Partition Equal Subset Sum": [[5, "problem-15-partition-equal-subset-sum"]], "Problem 16: Word Break": [[5, "problem-16-word-break"]], "Problem 17: Decode Ways": [[5, "problem-17-decode-ways"]], "Problem 18: Maximal Square": [[5, "problem-18-maximal-square"]], "Problem 19: Longest Increasing Path in a Matrix": [[5, "problem-19-longest-increasing-path-in-a-matrix"]], "Problem 1: House Robber": [[5, "problem-1-house-robber"]], "Problem 20: Arithmetic Slices": [[5, "problem-20-arithmetic-slices"]], "Problem 2: Coin Change": [[5, "problem-2-coin-change"]], "Problem 3: Longest Common Subsequence": [[5, "problem-3-longest-common-subsequence"]], "Problem 4: Maximum Product Subarray": [[5, "problem-4-maximum-product-subarray"]], "Problem 5: Longest Increasing Subsequence": [[5, "problem-5-longest-increasing-subsequence"]], "Problem 6: Edit Distance": [[5, "problem-6-edit-distance"]], "Problem 7: Palindrome Partitioning II": [[5, "problem-7-palindrome-partitioning-ii"]], "Problem 8: Burst Balloons": [[5, "problem-8-burst-balloons"]], "Problem 9: Regular Expression Matching": [[5, "problem-9-regular-expression-matching"]], "Problem Statement": [[5, "problem-statement"], [5, "id1"], [5, "id5"], [5, "id9"], [5, "id11"], [5, "id14"], [5, "id17"], [5, "id20"], [5, "id23"], [5, "id26"], [5, "id29"], [5, "id32"], [5, "id35"], [5, "id38"], [5, "id41"], [5, "id44"], [5, "id47"], [5, "id50"], [5, "id53"], [5, "id56"], [11, "problem-statement"], [11, "id1"], [12, "problem-statement"], [12, "id1"], [13, "problem-statement"], [13, "id1"]], "Problem Statement:": [[7, "problem-statement"], [7, "id1"], [7, "id3"], [8, "problem-statement"], [8, "id1"], [8, "id5"], [8, "id8"], [9, "problem-statement"], [9, "id1"], [9, "id3"], [10, "problem-statement"], [10, "id1"], [10, "id4"]], "Problem: American Option Pricing": [[3, "problem-american-option-pricing"]], "Problem: Binary Tree Maximum Path Sum": [[9, "problem-binary-tree-maximum-path-sum"]], "Problem: Finding the Most Likely Sequence of Words": [[3, "problem-finding-the-most-likely-sequence-of-words"]], "Problem: Finding the Shortest Path in a Grid": [[3, "problem-finding-the-shortest-path-in-a-grid"]], "Problem: Global Sequence Alignment": [[3, "problem-global-sequence-alignment"]], "Problem: Subset Sum": [[9, "problem-subset-sum"]], "Problem: Traveling Salesman Problem (TSP)": [[9, "problem-traveling-salesman-problem-tsp"]], "Solution": [[5, "solution"], [5, "id12"], [5, "id15"], [5, "id18"], [5, "id21"], [5, "id24"], [5, "id27"], [5, "id30"], [5, "id33"], [5, "id36"], [5, "id39"], [5, "id42"], [5, "id45"], [5, "id48"], [5, "id51"], [5, "id54"], [5, "id57"]], "Solution using Bitmasking:": [[9, "solution-using-bitmasking"]], "Solution using State Compression:": [[9, "solution-using-state-compression"]], "Solution:": [[7, "solution"], [7, "id2"], [7, "id4"], [8, "solution"], [8, "id2"], [8, "id6"], [8, "id9"], [9, "solution"], [10, "solution"], [10, "id2"], [10, "id5"]], "Solution: A* Algorithm (a DP-based heuristic search algorithm)": [[3, "solution-a-algorithm-a-dp-based-heuristic-search-algorithm"]], "Solution: Binomial Option Pricing Model": [[3, "solution-binomial-option-pricing-model"]], "Solution: Needleman-Wunsch Algorithm": [[3, "solution-needleman-wunsch-algorithm"]], "Solution: Viterbi Algorithm": [[3, "solution-viterbi-algorithm"]], "Space Complexity": [[6, "space-complexity"]], "Space-Optimized Solution:": [[2, "space-optimized-solution"]], "Standard 2D DP Solution:": [[2, "standard-2d-dp-solution"]], "State Compression": [[9, "state-compression"]], "Tabulation (Bottom-up approach)": [[6, "tabulation-bottom-up-approach"]], "Technique: Rolling Array": [[2, "technique-rolling-array"]], "Time Complexity": [[6, "time-complexity"]], "Time and Space Complexity Analysis": [[6, "time-and-space-complexity-analysis"]], "Visualization": [[11, "visualization"], [11, "id5"], [12, "visualization"], [12, "id5"], [13, "visualization"], [13, "id5"]], "What is Dynamic Programming?": [[1, "what-is-dynamic-programming"]], "When to use Dynamic Programming": [[1, "when-to-use-dynamic-programming"]]}, "docnames": ["appendix", "chapter_1", "chapter_10", "chapter_11", "chapter_12", "chapter_13", "chapter_2", "chapter_3", "chapter_4", "chapter_5", "chapter_6", "chapter_7", "chapter_8", "chapter_9", "cover", "index"], "envversion": {"sphinx": 61, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1}, "filenames": ["appendix.md", "chapter_1.md", "chapter_10.md", "chapter_11.md", "chapter_12.md", "chapter_13.md", "chapter_2.md", "chapter_3.md", "chapter_4.md", "chapter_5.md", "chapter_6.md", "chapter_7.md", "chapter_8.md", "chapter_9.md", "cover.md", "index.md"], "indexentries": {}, "objects": {}, "objnames": {}, "objtypes": {}, "terms": {"": [0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13], "0": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], "01344": 3, "05": 3, "1": [6, 8, 9], "10": [0, 4, 7, 8, 9, 10, 12, 13], "100": [2, 3, 6, 10], "101": [0, 4, 8, 9], "10x30": 12, "10x30x5": 12, "10x30x60": 12, "10x5x60": 12, "11": [0, 7], "12": 9, "120": [2, 10], "13": 2, "15": [9, 13], "1500": 12, "18": [0, 4, 8], "18000": 12, "1950": 1, "1d": 5, "2": [6, 8, 9], "20": [2, 9, 10, 13], "2024": 14, "21": 13, "22": 13, "220": [2, 10], "23": 13, "24": 13, "25": [9, 13], "26": 5, "27": 13, "27000": 12, "28": [8, 13], "2d": [5, 10, 11, 12, 13], "2f": 3, "2x2": 12, "3": [8, 9, 11, 12, 13], "30": [2, 9, 10, 12, 13], "3000": 12, "30x5": 12, "30x5x60": 12, "34": 9, "35": [9, 13], "354224848179261915075": 6, "36": 13, "37": 13, "38": 13, "39": 13, "3d": 13, "4": [1, 2, 8, 9, 12, 13], "40": 13, "41": 13, "42": [9, 13], "44": 13, "4500": [2, 12], "5": [1, 2, 3, 7, 8, 9, 12, 13], "50": [2, 10], "55": [0, 2, 3, 7], "5x60": 12, "6": [0, 3, 8], "60": [2, 10, 12], "7": [0, 3, 4, 8], "8": [0, 7, 13], "80": [9, 13], "9": [0, 4, 8, 9], "9000": 12, "A": [1, 5, 11, 12, 13, 15], "As": [1, 3, 6, 7], "At": [5, 7], "By": [0, 4], "For": [1, 2, 5, 6, 7, 9, 11, 12, 13], "If": [1, 5, 6, 7, 8, 10, 11], "In": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], "It": [1, 6, 7, 9], "No": 3, "One": [2, 3], "The": [1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], "There": 12, "These": [3, 7, 8, 9, 10, 12, 13], "To": 7, "With": 4, "_": [0, 2, 3, 5, 8, 10, 11, 12], "__init__": 9, "_sum": 8, "a_star": 3, "aa": 11, "aab": 10, "ab": [3, 12], "abc": 5, "abcd": [0, 5, 8], "abil": 10, "about": 4, "abov": 5, "ac": [0, 5, 8], "accur": 3, "achiev": 5, "acoust": 3, "across": 3, "actual": [4, 5, 12], "add": [5, 9], "adjac": 5, "advanc": 8, "affect": [2, 5], "after": [4, 5, 13], "again": [6, 7], "aggctatcacctgacctccaggccgatgccc": 3, "ago": 5, "alert": 5, "algorithm": [2, 6], "alignment_scor": 3, "all": [4, 5, 6, 7, 8, 9, 10], "all_set": [9, 13], "alloc": 1, "allow": [1, 5, 9], "along": 5, "alreadi": [6, 7], "also": [1, 6, 9], "alwai": [2, 5], "american_put_opt": 3, "amount": [0, 5, 6, 7], "an": [3, 5, 6, 7, 8, 9, 12, 13], "analysi": 2, "analyz": [2, 3, 6], "ani": [5, 7, 8, 9, 11], "answer": [5, 8], "appear": [1, 8, 9], "append": 3, "appli": [3, 4, 5, 6, 7, 8, 9, 11, 12, 13], "applic": [2, 4], "approach": [7, 8, 9], "appropri": 2, "ar": [0, 1, 2, 4, 5, 7, 8, 9, 10, 11, 12], "area": [5, 12], "arg": 13, "around": 5, "arrai": [5, 6, 7, 8, 9, 11, 13], "arriv": [4, 7], "ask": [4, 5, 10], "asset": 3, "assist": 3, "assum": 5, "autom": 3, "automat": [0, 5], "autonom": 3, "avoid": [1, 5, 6, 9], "b": [1, 2, 3, 5, 11, 12, 13], "babcbab": 11, "backward": [3, 11], "base": [2, 4, 5, 6, 7, 11, 12, 13], "basic": 6, "bbab": 11, "bbabcbcab": 11, "bc": 12, "becom": [4, 13], "been": [5, 9], "befor": [3, 4, 6], "behind": 1, "being": 6, "bellman": 1, "below": 7, "best": 2, "better": 6, "between": [1, 2, 4, 5, 7, 9, 13], "binari": [4, 12], "bit": [9, 13], "bitmask": 13, "bitwis": 9, "book": 15, "bool": 11, "both": [5, 6, 7], "bottom": [4, 5, 7, 8, 12], "bought": 5, "bound": 5, "boundari": 5, "break": [1, 3, 4, 6], "broken": [1, 4, 5], "brute": 4, "bst": 5, "build": [1, 6, 7, 9, 11, 12], "c": [1, 7, 12, 13], "cach": 0, "calcul": [1, 2, 5, 6, 9], "call": [0, 2, 4, 5, 6, 13], "came_from": 3, "can": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], "cannot": [5, 7], "canpartit": 5, "capac": [2, 10], "care": 3, "carefulli": 2, "carri": 2, "case": [2, 3, 4, 5, 6, 7, 11, 13], "categori": 10, "cell": [4, 5, 8, 13], "certain": [1, 5], "chain": 4, "challeng": [0, 1, 8, 13], "chang": 1, "chapter": [1, 6, 7, 8, 9, 10, 11], "charact": [5, 10, 11], "characterist": 4, "check": [5, 6], "choic": [4, 7], "choos": [4, 5], "chosen": 10, "citi": [9, 13], "class": 9, "classic": [4, 5, 7, 8, 9, 11, 12, 13], "clean": 3, "cleaner": 0, "clearli": 12, "clever": 2, "climb": [2, 4], "climb_stair": [0, 2, 7], "code": [0, 1, 5, 8, 9, 10], "coin": 1, "coin_chang": [0, 7], "coinchang": 5, "col": 3, "collect": [0, 4, 5, 10], "column": [3, 5, 8], "combin": [3, 5, 7, 9, 10, 13], "combinatori": 0, "common": [1, 2, 3], "compar": 3, "competit": 10, "complet": 5, "complex": [1, 2, 3, 4, 5, 7, 8, 9, 10], "comput": [1, 5, 6, 9, 12], "concept": [3, 6, 7, 10, 11], "concis": 0, "condit": 5, "configur": 5, "connect": 5, "consecut": 5, "consid": [1, 2, 4, 5, 9, 13], "consist": [3, 5], "constant": 6, "constraint": [2, 5, 10], "construct": [1, 4, 13], "contact": 5, "contain": [5, 8, 9, 13], "contest": 10, "context": 1, "contigu": [5, 8], "convert": [5, 10], "cool": 5, "copi": 13, "core": [1, 3], "corner": [8, 12], "correspond": 12, "cost": 12, "could": 5, "couldn": 5, "cover": [2, 5, 9, 11], "creat": [5, 6, 13], "crucial": [3, 6], "current": [2, 3, 5, 7, 8], "current_c": 9, "current_max_path": 9, "current_sum": 8, "cut": [5, 10], "cycl": 13, "d": [1, 3, 12, 13], "dai": 5, "date": [3, 14], "deal": 0, "decid": [4, 12], "decis": 3, "decod": 3, "decor": 0, "deep": 6, "deeper": [1, 6], "def": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], "defaultdict": 0, "defin": [4, 5, 7, 11, 12], "delet": [3, 5, 10], "demonstr": [3, 7, 8, 10, 13], "denomin": [5, 7], "depend": 2, "depth": 6, "deriv": 8, "design": 13, "despit": 1, "detail": 5, "determin": [2, 3, 4, 9, 10], "df": 5, "di": 5, "diagon": 5, "diagram": 1, "dictionari": [5, 6], "differ": [3, 4, 5, 6, 7], "digit": 5, "dimens": [2, 12], "dimension": 13, "direct": 5, "discuss": [4, 6, 9], "dist": 13, "distanc": [1, 4, 9, 13], "distinct": 7, "dive": [1, 6, 7], "divers": 3, "divid": 5, "dj": 5, "dna": 3, "do": [1, 4], "doe": 11, "doesn": 6, "domain": [2, 3], "don": [5, 7], "down": [1, 3, 4, 5, 7, 8], "dp": [1, 5, 6, 7, 10, 11, 12, 13, 15], "draw": 4, "dt": 3, "due": [6, 13], "dx": 3, "dy": 3, "dynam": [4, 5], "e": 5, "each": [3, 5, 6, 7, 9, 10, 13], "easier": 6, "easili": 7, "edg": [5, 13], "edit": 4, "educ": 10, "effect": [0, 13], "effici": [0, 1, 2, 3, 4, 6, 9, 11, 12, 13], "either": [5, 7], "element": [5, 9, 11], "elif": [5, 11], "els": [0, 2, 3, 5, 7, 8, 10, 11, 13], "emission_prob": 3, "emit_p": 3, "emphasi": [], "empti": [5, 9, 11, 13], "encod": [5, 9], "encount": [0, 4, 5, 6], "end": [4, 5, 7, 8, 9, 10, 13], "ensur": 4, "enter": 5, "entir": [5, 11], "environ": 3, "equal": [4, 7, 10], "equip": 4, "especi": 0, "even": [4, 8, 13], "everi": [5, 10, 13], "evolutionari": 3, "exactli": [5, 9, 13], "exampl": [1, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 15], "except": 5, "exclus": 5, "exercis": 3, "exercise_valu": 3, "exist": 9, "exp": 3, "expir": 3, "explicitli": 6, "explor": [1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13], "exponenti": 1, "express": [4, 7, 8], "extend": [5, 9, 13], "f": [2, 3, 4, 7, 11, 12, 13], "f_score": 3, "fair": 3, "fals": [5, 9, 10, 11], "familiar": 4, "far": 8, "featur": 3, "fewest": 5, "fib": [0, 1], "fibonacci": [1, 4, 6], "fibonacci_memo": 6, "fibonacci_optim": 2, "fibonacci_tab": 6, "field": 3, "fill": [3, 5, 6, 11, 12, 13], "final": [5, 8, 13], "financi": 3, "find": [5, 7, 8, 9, 10, 11, 12, 13], "first": [3, 4, 5, 8, 9, 10, 11, 12], "fix": 2, "float": [0, 3, 5, 7, 9, 12, 13], "floyd_warshal": 13, "focu": 10, "focus": 8, "follow": [4, 5, 6, 7, 10], "forc": 4, "form": [5, 10, 13], "formul": [3, 4], "forward": 11, "found": [3, 5], "foundat": 13, "four": 5, "free": 3, "frequent": [0, 10], "from": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 13], "function": [0, 4, 5, 11, 12, 13], "fundament": 1, "futur": 1, "g_score": 3, "gain": 9, "gap_penalti": 3, "gener": [0, 5], "genet": 3, "geq": 7, "get": [3, 4, 5], "give": [4, 5, 7], "given": [3, 5, 7, 8, 9, 10, 11, 12, 13], "global": 9, "go": 6, "goal": 3, "goe": [1, 5, 9], "greater": 5, "grid": [5, 12], "grid_travel": 0, "grow": 1, "ha": [1, 3, 4, 5, 8, 11, 12], "handl": [5, 9, 10], "hard": 13, "hash": 9, "have": [5, 6, 7, 9, 10, 12], "heap": 3, "heappop": 3, "heappush": 3, "heapq": 3, "help": [0, 3, 4, 6, 7, 8, 9], "henc": 12, "here": [0, 4, 6, 7, 11, 12, 13], "hierarch": 9, "high": 13, "hold_valu": 3, "hors": 10, "how": [1, 2, 3, 4, 6, 7, 8, 10, 11, 12, 13], "howev": [2, 3, 6], "hybrid": 2, "i": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], "idea": [1, 8], "identifi": [0, 3], "ignor": 5, "illustr": 10, "imag": 12, "implement": [0, 1, 4, 6], "implicit": 4, "import": [0, 3, 9, 10, 13], "imposs": 5, "improv": [2, 6, 9, 10], "includ": [1, 4, 9, 10], "increas": [1, 4], "index": [4, 5, 8], "indic": 4, "induct": 3, "industri": 3, "ineffici": 2, "inf": [0, 3, 5, 7, 9, 12, 13], "infin": [5, 7], "infinit": 5, "inform": [3, 4], "initi": [0, 3, 4, 5, 7, 8, 13], "inner": 5, "innov": 13, "input": [4, 5, 6, 9, 11, 13], "insert": [3, 5, 10], "insight": [4, 5], "instanc": 1, "instead": [1, 2, 6, 13], "institut": 3, "instrument": 3, "int": [0, 5], "integ": [5, 8, 9], "interest": 3, "intermedi": [3, 13], "interview": [5, 8, 9, 10], "intric": 8, "introduc": [8, 11], "intuit": 2, "invest": 3, "investor": 3, "involv": [1, 2, 4, 9, 11, 12, 13], "is_match": 11, "is_palindrom": [5, 10], "isinterleav": 5, "ismatch": 5, "issu": [2, 6], "item": [1, 2, 10], "iter": [5, 6, 9, 10, 13], "itertool": [9, 13], "ith": 5, "its": [1, 4, 5, 6, 8, 9, 11, 12, 13], "j": [0, 2, 3, 4, 5, 8, 9, 10, 11, 12, 13], "join": 3, "juli": 14, "just": [3, 5], "k": [2, 3, 4, 9, 12, 13], "keep": [5, 7], "kei": [4, 5, 8, 11, 12], "kind": 5, "knapsack": 1, "knapsack_1d": 2, "knowledg": 3, "languag": 1, "larg": [6, 9, 10], "larger": [1, 5, 7], "largest": [5, 8, 12], "last": [4, 5, 13], "lc": 5, "lead": [2, 6], "learn": 7, "least": [5, 8], "leav": 9, "left": [5, 8, 9], "left_gain": 9, "len": [0, 2, 3, 4, 5, 8, 9, 10, 11, 12, 13], "length": [4, 5, 8, 11, 12, 13], "length_of_li": 0, "lengthofli": 5, "leq": 10, "less": [5, 7, 10], "let": [1, 2, 4, 6, 7, 11, 12, 13], "letter": 5, "level": 6, "leverag": 1, "li": 4, "like": 5, "limit": 10, "line": [4, 13], "list": [9, 13], "ll": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], "logist": 13, "longer": 5, "longest": [1, 4], "longest_common_subsequ": [0, 8], "longest_increasing_subsequ": [4, 8], "longest_palindromic_subsequ": 11, "longestcommonsubsequ": 5, "longestincreasingpath": 5, "longestpalindrom": 5, "look": [4, 5, 6], "lot": 2, "m": [0, 3, 5, 8, 10, 11, 12], "machin": 5, "made": [5, 7], "mai": [5, 9, 13], "maintain": 8, "make": [0, 1, 2, 3, 4, 5, 7, 13], "manag": 3, "manhattan_dist": 3, "mani": [1, 2, 5, 7, 8, 13], "manipul": [10, 13], "map": [4, 5], "mark": 5, "mask": [9, 13], "master": 4, "match": [3, 4], "match_scor": 3, "math": 3, "mathemat": [1, 3], "matric": 11, "matrix": 4, "matrix_chain_multipl": [2, 12], "matter": 0, "matur": 3, "max": [0, 2, 3, 4, 5, 8, 9, 10, 11, 12], "max_gain": 9, "max_length": 5, "max_path_sum": 9, "max_sid": [5, 12], "max_so_far": 5, "max_subarrai": 8, "max_sum": [8, 9], "maxcoin": 5, "maxim": [1, 2, 3], "maximal_squar": 12, "maximalsquar": 5, "maximum": [1, 4, 10], "maxproduct": 5, "maxprofit": 5, "maxsiz": 0, "mean": [1, 5], "medium": [9, 13], "memo": [0, 2, 5, 6, 9], "memoiz": [2, 4, 5, 7, 9], "memori": [1, 2], "mere": 12, "messag": 5, "method": [1, 2], "might": 4, "min": [0, 2, 5, 7, 9, 10, 12, 13], "min_": [7, 10, 12, 13], "min_cut": [5, 10], "min_dist": 10, "min_so_far": 5, "mincut": 5, "mindist": 5, "minim": [1, 5], "minimum": [1, 2, 4, 7, 10, 12], "minpathsum": 5, "mismatch_scor": 3, "mn": [5, 11, 12], "monei": 5, "more": [0, 2, 3, 5, 6, 7, 8, 9, 11, 12, 13], "most": [2, 4, 12, 13], "move": [5, 8], "multipl": [0, 1, 4, 5], "multipli": [5, 12], "must": 1, "n": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], "n2": 9, "naiv": 9, "name": [1, 4], "nameerror": 4, "natur": 6, "navig": 3, "necessari": 4, "need": [2, 4, 5, 7, 10, 12], "needleman_wunsch": 3, "neg": [5, 13], "neighbor": 3, "neq": 13, "network": 13, "new": [5, 11], "new_visit": 9, "newpath": 3, "next": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13], "next_citi": 9, "ni": 5, "night": 5, "nj": 5, "node": [5, 9], "non": 5, "none": [0, 3, 5, 9], "nonloc": 9, "note": 5, "noth": 1, "notic": 1, "np": [3, 13], "nth": [2, 7], "num": [0, 4, 5, 8, 9], "number": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13], "numberofarithmeticslic": 5, "numdecod": 5, "numer": 3, "numpi": 3, "numtre": 5, "nw": 2, "o": [2, 5, 6, 8, 9, 10, 11, 12, 13], "ob": 3, "observ": 3, "obstacl": 3, "obtain": [5, 9, 10], "occurr": 11, "odd": 5, "off": 2, "often": [2, 3, 4, 6, 8, 9, 11, 12, 13], "onc": [1, 9, 13], "one": [4, 5, 7, 8, 11], "ones": 6, "onli": [1, 2, 5, 8, 13], "oper": [5, 9, 10, 12, 13], "opportun": 4, "optim": [3, 4, 10, 12, 13], "optimal_tour": 13, "option": [0, 5], "option_pric": 3, "order": [0, 5, 6, 9, 12], "organ": 3, "origin": [5, 6, 9, 12, 13], "other": [5, 6, 13], "otherwis": [5, 10], "our": [2, 5, 9, 13], "out": [4, 5], "output": [0, 2, 5, 7, 8, 9, 10], "outsid": 5, "over": [5, 9, 13], "overal": 1, "overflow": 6, "overlap": 4, "own": 10, "p": [3, 5, 11], "paint": 5, "pair": 9, "palindrom": 4, "partial": [5, 11], "particularli": [1, 3, 9, 12], "partit": 4, "path": [1, 8], "pattern": [3, 5, 7, 11, 12], "per": 0, "perform": [5, 6, 12], "permit": [5, 10], "place": 13, "plai": 3, "plan": 5, "plu": 5, "po": 9, "point": [1, 5], "polic": 5, "posit": [5, 8, 10, 12], "possibl": [5, 8, 9, 10, 13], "post": 9, "potenti": [5, 9], "power": [1, 2, 3, 4, 11], "practic": [3, 4, 7], "preced": [5, 6, 11], "prefix": 5, "prepar": [], "prev": 13, "prev_mask": 9, "previou": [0, 2, 5, 7], "previous": 6, "price": 5, "principl": 3, "print": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], "prob": 3, "probabl": 3, "problem": [1, 6], "process": 12, "produc": 3, "product": 12, "profession": 5, "profici": 4, "profit": 5, "program": [4, 5], "properti": 1, "protein": 3, "prove": 3, "provid": [5, 6], "pure": 2, "put": [3, 4], "python": [5, 15], "question": 7, "quickli": [4, 7], "r": [3, 13], "raini": 3, "rang": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], "rate": 3, "rather": 6, "re": 4, "reach": [5, 7, 8], "read": 11, "readabl": 0, "real": [2, 4, 13], "recalcul": 6, "recap": 7, "recent": [4, 13], "recogn": [3, 4, 7, 10], "recurr": [0, 4, 5, 7, 8, 10, 11, 12, 13], "recurs": [1, 2, 6], "reduc": [2, 6, 9], "redund": [1, 5, 9], "refer": [1, 7], "region": [3, 8], "regular": 4, "rel": 5, "relat": [0, 4, 5, 7, 8, 10, 11, 12, 13], "relationship": 3, "remain": [3, 5], "remark": 13, "rememb": [2, 4], "replac": [5, 10], "repres": [0, 4, 5, 7, 8, 9, 10, 11, 12, 13], "requir": [3, 4, 5, 10], "research": [3, 13], "respect": [5, 11, 12], "rest": [5, 7], "restrict": 5, "result": [0, 1, 3, 4, 5, 6, 8, 13], "return": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], "reus": [1, 4, 5], "richard": 1, "right": [5, 8, 9, 11, 12], "right_gain": 9, "risk": 3, "rna": 3, "ro": 10, "rob": 5, "role": 3, "root": [5, 9], "rout": [9, 13], "row": [3, 5, 8, 13], "run": 3, "s1": 5, "s2": 5, "s3": 5, "same": [1, 3, 5, 6, 7, 11], "save": 2, "saw": 12, "scalar": 12, "scenario": 8, "scienc": 1, "score": 3, "search": 4, "secur": 5, "see": 2, "seen": [3, 7, 8], "segment": 5, "self": 9, "separ": 5, "seq1": 3, "seq2": 3, "sequenc": [1, 5, 6, 12, 13], "seri": 4, "servic": 3, "set": [5, 9, 10, 13], "setminu": 13, "sever": [1, 2, 4], "share": [4, 5], "shine": 1, "shop": 3, "shortest": [1, 9], "should": [5, 11, 12], "show": [8, 10], "showcas": 13, "side": [5, 12], "sigma": 3, "signal": 3, "signific": [9, 10], "significantli": [2, 6, 10], "similar": [0, 3, 4, 7], "simpl": [0, 1, 2, 3, 13], "simpler": [1, 4], "simplest": 4, "simpli": 6, "simplifi": [0, 3], "sinc": 8, "singl": [5, 7, 9, 11], "size": [6, 8, 9, 12, 13], "skill": 9, "small": [9, 13], "smaller": [1, 3, 4, 6], "smallest": 6, "sn": 5, "so": [5, 6, 8, 10, 12], "solidifi": 6, "solut": [1, 4, 6, 13], "solv": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13], "solvabl": [4, 13], "some": [0, 4, 5, 6, 7, 8, 9, 10], "some_funct": 4, "someth": 4, "sometim": [0, 2], "sort": 9, "space": [4, 5, 8, 9, 10, 11, 12, 13], "specif": [0, 2, 3, 10], "sqrt": 3, "stack": 6, "stai": 5, "stair": [2, 4], "staircas": 7, "start": [2, 3, 4, 5, 6, 7, 8, 9], "start_p": 3, "start_prob": 3, "stash": 5, "state": [0, 3, 4, 5, 13], "step": [0, 2, 3, 7, 11, 12, 13], "still": 5, "stock": 3, "stop": 5, "store": [1, 3, 4, 5, 6, 8, 10, 11, 12, 13], "str": 11, "straightforward": [0, 6], "strategi": [3, 9], "street": 5, "strictli": [5, 8], "strike": 3, "string": [8, 10], "structur": [4, 5, 6, 9], "submatrix": [5, 12], "subproblem": [3, 4, 5, 6, 7], "subsequ": [1, 4], "subset": 13, "subset_sum": 9, "substr": [10, 11], "substructur": 4, "subtre": [5, 9], "sum": [4, 6], "sunni": 3, "support": [5, 11], "suppos": 12, "system": [3, 5], "t": [3, 5, 6, 7, 11], "t1": 5, "t2": 5, "t3": 5, "tabl": [2, 3, 5, 7, 10, 11, 12, 13], "tabul": [2, 4, 7], "tabular": 1, "tackl": [0, 4, 8], "tagctatcacgaccgcggtcgatttgcccgac": 3, "take": [2, 5, 7], "target": [5, 7, 9], "techniqu": [1, 3, 4, 6, 8, 10, 11, 12, 13], "temp_max": 5, "tentative_g_scor": 3, "term": [1, 2, 4], "test": [4, 5, 11, 12, 13], "text": [3, 11, 12, 13], "text1": [0, 5, 8], "text2": [0, 5, 8], "th": [7, 12], "than": [2, 5, 6, 7, 10], "thei": [2, 4, 5, 6, 7, 8, 10], "them": [4, 5, 9, 12], "theoret": 3, "therefor": 7, "thi": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], "think": 4, "third": 9, "those": [1, 3], "three": [5, 10, 12], "through": [1, 3, 5, 9, 10], "time": [1, 2, 3, 4, 7, 8, 9, 10, 11, 12, 13], "tm": 5, "togeth": [5, 12], "tonight": 5, "top": [4, 5, 7, 8], "total": [1, 5, 10, 13], "total_sum": 5, "tour": 13, "traceback": [4, 13], "track": 5, "trade": 2, "trans_p": 3, "transact": 5, "transcript": 3, "transit": 13, "transition_prob": 3, "travel": 0, "traveling_salesman": 13, "travers": 9, "treat": 5, "tree": 4, "treenod": 9, "true": [5, 9, 10, 11], "try": [4, 5], "tupl": 9, "twice": 1, "two": [0, 1, 3, 5, 6, 7, 8, 10, 11, 12, 13], "two_digit": 5, "type": [1, 7], "typic": [4, 6], "u": [1, 3, 5, 7, 9], "understand": [0, 3, 4, 6, 7, 8, 10], "uniqu": 8, "unique_path": 8, "up": [4, 5, 7, 9], "updat": [5, 9, 13], "upon": 11, "us": [3, 4, 5, 6, 7, 8, 10, 11, 12, 13], "usag": [2, 3, 6, 7, 8, 9, 10], "usual": 6, "v": 3, "val": 9, "valid": 5, "valu": [2, 3, 4, 5, 7, 8, 10, 12], "valueerror": 13, "variabl": 8, "variou": [2, 3, 7, 10, 11, 13], "ve": [2, 3, 4, 7], "vehicl": 3, "veri": 6, "versatil": 3, "vertex": 13, "vertic": 13, "virtual": 3, "visit": [9, 13], "visited_c": 9, "visual": 4, "volatil": 3, "w": [2, 10], "wa": 1, "wai": [4, 7, 8, 12, 13], "walk": 3, "want": 8, "warehous": 3, "we": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], "weather": 3, "weight": [2, 10, 13], "well": 4, "were": 5, "what": [4, 5, 9, 13], "when": [0, 4], "where": [0, 1, 2, 5, 6, 7, 8, 9, 10, 11, 12, 13], "whether": [5, 10], "which": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13], "while": [2, 3, 6, 9, 13], "whose": 12, "wide": [0, 3, 4, 12], "wise": 5, "within": 5, "without": [2, 5], "word": 10, "word1": [5, 10], "word2": [5, 10], "word_set": 5, "wordbreak": 5, "worddict": 5, "work": [0, 4, 5, 6], "world": [2, 4, 13], "worst": 6, "would": [1, 11, 12, 13], "wrap": 5, "write": [0, 4, 6], "x": [0, 5, 8, 13], "y": 3, "y0": 3, "year": 3, "you": [0, 2, 3, 4, 5, 7, 8, 10, 12], "your": [0, 2, 5, 6, 10], "z": 5, "zero": [5, 11], "\u03b5": 11}, "titles": ["Appendix", "Introduction to Dynamic Programming", "Chapter 10: Optimization Techniques in Dynamic Programming", "Chapter 11: Real-world Applications of Dynamic Programming", "Chapter 12: Common Patterns and Problem-Solving Strategies", "Chapter 13: Practice Problems and Solutions", "Fundamentals of Dynamic Programming", "Basic Dynamic Programming Problems", "Intermediate Dynamic Programming Concepts", "Advanced Dynamic Programming Techniques", "Classic Dynamic Programming Problems", "Dynamic Programming in Strings", "Chapter 8: Dynamic Programming in Arrays and Matrices", "Chapter 9: Dynamic Programming with Graphs", "Dynamic Programming for Coding interviews", "Dynamic Programming for Coding Interviews."], "titleterms": {"": 8, "1": [0, 1, 2, 3, 4, 5, 7, 10, 11, 12, 13], "10": [2, 5], "11": [3, 5], "12": [4, 5], "13": 5, "14": 5, "15": 5, "16": 5, "17": 5, "18": 5, "19": 5, "1d": [2, 8], "2": [0, 1, 2, 3, 4, 5, 7, 10, 11, 12, 13], "20": 5, "2d": [2, 8], "3": [0, 1, 2, 3, 4, 5, 7, 10], "4": [0, 3, 4, 5], "5": [0, 4, 5], "6": 5, "7": [5, 11], "8": [5, 12], "9": [5, 13], "A": [0, 3], "advanc": 9, "algorithm": [3, 8, 13], "align": 3, "all": 13, "american": 3, "an": 1, "analysi": [6, 11, 12, 13], "appendix": 0, "applic": 3, "approach": [2, 4, 5, 6, 11, 12, 13], "arithmet": 5, "arrai": [2, 12], "b": 0, "balloon": 5, "base": 3, "basic": 7, "best": 5, "binari": [5, 9], "binomi": 3, "bioinformat": 3, "bitmask": 9, "bottom": [2, 6], "break": 5, "bui": 5, "burst": 5, "chain": [2, 12], "chang": [0, 5, 7], "chapter": [2, 3, 4, 5, 12, 13], "cheat": 0, "classic": 10, "climb": [0, 7], "code": [4, 14, 15], "coin": [0, 5, 7], "combin": 2, "common": [0, 4, 5, 8], "complex": [6, 11, 12, 13], "comprehens": 0, "compress": 9, "concept": [1, 8], "conclus": [2, 3, 4, 11, 12, 13], "condit": 0, "cooldown": 5, "decod": 5, "default": 0, "dictionari": 0, "dimension": [0, 4], "distanc": [5, 10], "down": [2, 6], "dp": [0, 2, 3, 4, 8, 9], "dynam": [0, 1, 2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], "edit": [5, 10], "equal": 5, "exampl": 2, "explan": [5, 7, 8, 9, 10], "express": [5, 11], "fibonacci": [0, 2, 7], "financ": 3, "find": [1, 3], "floyd": 13, "functool": 0, "fundament": 6, "global": 3, "graph": 13, "grid": [3, 8], "heurist": 3, "hous": 5, "i": 1, "identifi": 4, "ii": 5, "implement": [5, 11, 12, 13], "increas": [0, 5, 8], "inlin": 0, "interleav": 5, "intermedi": 8, "interv": 4, "interview": [4, 14, 15], "introduct": 1, "kadan": 8, "kei": [0, 1], "knapsack": [2, 10], "languag": 3, "less": 2, "like": 3, "linear": 4, "list": 0, "longest": [0, 5, 8, 11], "lru_cach": 0, "match": [5, 11], "matric": 12, "matrix": [2, 5, 12], "maxim": [5, 12], "maximum": [5, 8, 9], "memoiz": [0, 6], "minimum": 5, "model": 3, "most": 3, "multi": 0, "multipl": [2, 12], "naiv": 2, "natur": 3, "needleman": 3, "optim": [1, 2], "optimum": 1, "option": 3, "overlap": 1, "pair": 13, "palindrom": [5, 10, 11], "partit": [5, 10], "path": [3, 5, 9, 13], "pattern": [0, 4], "plan": 3, "practic": 5, "price": 3, "problem": [0, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13], "process": 3, "product": 5, "program": [0, 1, 2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], "python": 0, "real": 3, "recognit": 3, "regular": [5, 11], "robber": 5, "robot": 3, "roll": 2, "salesman": [9, 13], "search": [3, 5], "sell": 5, "sequenc": [0, 2, 3, 4, 7], "sheet": 0, "shortest": [3, 13], "slice": 5, "solut": [2, 3, 5, 7, 8, 9, 10], "solv": 4, "space": [2, 6], "speech": 3, "squar": [5, 12], "stair": [0, 7], "standard": 2, "state": [2, 9], "statement": [5, 7, 8, 9, 10, 11, 12, 13], "step": 4, "stock": 5, "strategi": 4, "string": [4, 5, 11], "subarrai": [5, 8], "subproblem": 1, "subsequ": [0, 5, 8, 11], "subset": [4, 5, 9], "substr": 5, "substructur": 1, "sum": [5, 8, 9], "tabl": 0, "tabul": 6, "techniqu": [2, 9], "time": [5, 6], "tip": [0, 4], "top": [2, 6], "travel": [8, 9, 13], "tree": [5, 9], "trick": 0, "tsp": 9, "tupl": 0, "two": 4, "uniqu": 5, "up": [2, 6], "us": [0, 1, 2, 9], "valu": 1, "visual": [11, 12, 13], "viterbi": 3, "wai": 5, "warshal": 13, "what": 1, "when": 1, "word": [3, 5], "world": 3, "wunsch": 3}})